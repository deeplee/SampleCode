diff --git a/api/current.txt b/api/current.txt
index 2b65d854766..16ba33ecba5 100644
--- a/api/current.txt
+++ b/api/current.txt
@@ -10180,6 +10180,7 @@ package android.content {
     field public static final int FLAG_INCLUDE_STOPPED_PACKAGES = 32; // 0x20
     field public static final int FLAG_RECEIVER_FOREGROUND = 268435456; // 0x10000000
     field public static final int FLAG_RECEIVER_NO_ABORT = 134217728; // 0x8000000
+    field public static final int FLAG_RECEIVER_OTHER_QUEEN = 1048576; // 0x100000
     field public static final int FLAG_RECEIVER_REGISTERED_ONLY = 1073741824; // 0x40000000
     field public static final int FLAG_RECEIVER_REPLACE_PENDING = 536870912; // 0x20000000
     field public static final int FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS = 2097152; // 0x200000
diff --git a/core/java/android/content/Intent.java b/core/java/android/content/Intent.java
index 5a306622426..42396f6bd0e 100755
--- a/core/java/android/content/Intent.java
+++ b/core/java/android/content/Intent.java
@@ -5838,6 +5838,11 @@ public class Intent implements Parcelable, Cloneable {
      */
     public static final int FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS = 0x00200000;
 
+    /**
+     * if set the broadcast will in the Lee queen
+     */
+    public static final int FLAG_RECEIVER_OTHER_QUEEN = 0x00100000;
+
     /**
      * @hide Flags that can't be changed with PendingIntent.
      */
diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
old mode 100644
new mode 100755
index 145c1c964a3..63ab513c641
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -721,19 +721,21 @@ public class ActivityManagerService extends IActivityManager.Stub
 
     BroadcastQueue mFgBroadcastQueue;
     BroadcastQueue mBgBroadcastQueue;
+    BroadcastQueue mLeeBroadcastQueue;
     // Convenient for easy iteration over the queues. Foreground is first
     // so that dispatch of foreground broadcasts gets precedence.
-    final BroadcastQueue[] mBroadcastQueues = new BroadcastQueue[2];
+    final BroadcastQueue[] mBroadcastQueues = new BroadcastQueue[3];
 
     BroadcastStats mLastBroadcastStats;
     BroadcastStats mCurBroadcastStats;
 
     BroadcastQueue broadcastQueueForIntent(Intent intent) {
         final boolean isFg = (intent.getFlags() & Intent.FLAG_RECEIVER_FOREGROUND) != 0;
+        final boolean isLee = (intent.getFlags() & Intent.FLAG_RECEIVER_OTHER_QUEEN) != 0;
         if (DEBUG_BROADCAST_BACKGROUND) Slog.i(TAG_BROADCAST,
                 "Broadcast intent " + intent + " on "
                 + (isFg ? "foreground" : "background") + " queue");
-        return (isFg) ? mFgBroadcastQueue : mBgBroadcastQueue;
+        return (isFg) ? mFgBroadcastQueue : ((isLee) ? mLeeBroadcastQueue : mBgBroadcastQueue);
     }
 
     /**
@@ -3086,8 +3088,11 @@ public class ActivityManagerService extends IActivityManager.Stub
                 "foreground", BROADCAST_FG_TIMEOUT, false);
         mBgBroadcastQueue = new BroadcastQueue(this, mHandler,
                 "background", BROADCAST_BG_TIMEOUT, true);
+        mLeeBroadcastQueue = new BroadcastQueue(this, mHandler,
+                "Lee", BROADCAST_FG_TIMEOUT, false);
         mBroadcastQueues[0] = mFgBroadcastQueue;
         mBroadcastQueues[1] = mBgBroadcastQueue;
+        mBroadcastQueues[2] = mLeeBroadcastQueue;
 
         mServices = new ActiveServices(this);
         mProviderMap = new ProviderMap(this);
@@ -20817,7 +20822,8 @@ public class ActivityManagerService extends IActivityManager.Stub
 
     boolean isPendingBroadcastProcessLocked(int pid) {
         return mFgBroadcastQueue.isPendingBroadcastProcessLocked(pid)
-                || mBgBroadcastQueue.isPendingBroadcastProcessLocked(pid);
+                || mBgBroadcastQueue.isPendingBroadcastProcessLocked(pid)
+                || mLeeBroadcastQueue.isPendingBroadcastProcessLocked(pid);
     }
 
     void skipPendingBroadcastLocked(int pid) {
@@ -22072,7 +22078,8 @@ public class ActivityManagerService extends IActivityManager.Stub
 
             synchronized(this) {
                 BroadcastQueue queue = (flags & Intent.FLAG_RECEIVER_FOREGROUND) != 0
-                        ? mFgBroadcastQueue : mBgBroadcastQueue;
+                        ? mFgBroadcastQueue :( (flags & Intent.FLAG_RECEIVER_OTHER_QUEEN) != 0
+                        ? mLeeBroadcastQueue : mBgBroadcastQueue);
                 r = queue.getMatchingOrderedReceiver(who);
                 if (r != null) {
                     doNext = r.queue.finishReceiverLocked(r, resultCode,
